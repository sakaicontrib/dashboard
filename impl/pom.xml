<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
    <artifactId>dashboard</artifactId>
    <groupId>org.sakaiproject.dash</groupId>
    <version>1.0-SNAPSHOT</version>
  </parent>
	
	<name>dashboard - Implementation</name>
	<groupId>org.sakaiproject.dash</groupId>
		<artifactId>dashboard-impl</artifactId>

	<packaging>jar</packaging>
	
  	<dependencies>
        
    	<!-- project dependencies -->
    	<dependency>
			<groupId>org.sakaiproject.dash</groupId>
		<artifactId>dashboard-api</artifactId>
		</dependency>
    	
    	<!-- third party dependencies -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
		</dependency>
<!--
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring</artifactId>
		</dependency>
		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache-core</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-configuration</groupId>
			<artifactId>commons-configuration</artifactId>
		</dependency>
		
		<!-- Sakai dependencies -->
        <dependency>
            <groupId>org.sakaiproject.kernel</groupId>
            <artifactId>sakai-kernel-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.sakaiproject.kernel</groupId>
            <artifactId>sakai-component-manager</artifactId>
        </dependency>
        <dependency>
			<groupId>org.sakaiproject.kernel</groupId>
  			<artifactId>sakai-kernel-util</artifactId>
		</dependency>

		<dependency>
            <groupId>org.sakaiproject.entitybroker</groupId>
            <artifactId>entitybroker-api</artifactId>
        </dependency>
		
        <!-- testing dependencies -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-mock</artifactId>
            <version>2.0.8</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
            <version>1.8.0.7</version>
            <scope>test</scope>
        </dependency>

		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.2.2</version>
			<scope>test</scope>
		</dependency>

		<dependency>
		    <groupId>com.google.guava</groupId>
		    <artifactId>guava</artifactId>
		    <version>r09</version>
		</dependency>
  	</dependencies>
  	
	<build>
		<resources>
            <resource>
                <directory>${basedir}/src/resources</directory>
                <includes>
                    <include>**/*.properties</include>
                </includes>
            </resource>
        </resources>
        
	    <!-- unit testing -->
	    <plugins>
	        <plugin>
	            <groupId>org.apache.maven.plugins</groupId>
	            <artifactId>maven-surefire-plugin</artifactId>
	            <!-- 
	                By default, the surefire plugin will automatically include all test classes with the following wildcard patterns:
	                "**/Test*.java" - includes all of its subdirectory and all java filenames that start with "Test".
	                "**/*Test.java" - includes all of its subdirectory and all java filenames that end with "Test".
	                "**/*TestCase.java" - includes all of its subdirectory and all java filenames that end with "TestCase".
	            -->
	        </plugin>
	    </plugins>
	    <testResources>
	        <testResource>
	            <directory>${basedir}/../pack/src/webapp/WEB-INF</directory>
	            <includes>
	                <include>components.xml</include>
	            </includes>
	        </testResource>
	        <testResource>
	            <directory>${basedir}/src/test</directory>
	            <includes>
	                <include>test.xml</include>
	                <!-- <include>hibernate.properties</include> -->
	            </includes>
	        </testResource>
	    </testResources>
	</build>
	
</project>

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>

	<!--  SakaiProxy -->
 	<bean id="org.sakaiproject.dash.logic.SakaiProxy"
    	class="org.sakaiproject.dash.logic.SakaiProxyImpl"
        init-method="init">
        
        <!-- API injection -->
        <property name="securityService" ref="org.sakaiproject.authz.api.SecurityService" />
        <property name="sessionManager" ref="org.sakaiproject.tool.api.SessionManager" />
        <property name="toolManager" ref="org.sakaiproject.tool.api.ToolManager" />
        <property name="userDirectoryService" ref="org.sakaiproject.user.api.UserDirectoryService" />
		<property name="eventTrackingService" ref="org.sakaiproject.event.api.EventTrackingService" />
		<property name="serverConfigurationService" ref="org.sakaiproject.component.api.ServerConfigurationService" />
		<property name="siteService" ref="org.sakaiproject.site.api.SiteService" />
		<property name="entityManager" ref="org.sakaiproject.entity.api.EntityManager" />
		<property name="authzGroupService" ref="org.sakaiproject.authz.api.AuthzGroupService" />
		
	</bean>
	
	<!-- ProjectLogic -->
	<bean id="org.sakaiproject.dash.logic.ProjectLogic"
    	class="org.sakaiproject.dash.logic.ProjectLogicImpl"
    	init-method="init">
    	
    	<property name="dao" ref="org.sakaiproject.dash.dao.DashboardDao" />	
    	<property name="cache" ref="org.sakaiproject.dash.cache" />	
    	
    </bean>
    
    <bean id="org.sakaiproject.dash.logic.DashboardLogic" 
    	class="org.sakaiproject.dash.logic.DashboardLogicImpl"
    	init-method="init">
    	<property name="sakaiProxy" ref="org.sakaiproject.dash.logic.SakaiProxy"></property>
    	<property name="dao" ref="org.sakaiproject.dash.dao.DashboardDao" />	
    	<property name="cache" ref="org.sakaiproject.dash.cache" />	
    </bean>
    
    <!-- DAO. This uses the DataSource that has already been setup by Sakai  -->
	<bean id="org.sakaiproject.dash.dao.DashboardDao"
		class="org.sakaiproject.dash.dao.impl.DashboardDaoImpl"
		init-method="init">
		<property name="jdbcTemplate">
			<bean class="org.springframework.jdbc.core.JdbcTemplate">
				<constructor-arg type="javax.sql.DataSource">
					<ref bean="javax.sql.DataSource" />
				</constructor-arg>
			</bean>
		</property>	
	</bean>
	
	<!-- Cache: ttl=1 hour -->
    <bean id="org.sakaiproject.dash.cache"
        class="org.springframework.cache.ehcache.EhCacheFactoryBean">
        <property name="cacheManager">
            <ref bean="org.sakaiproject.memory.api.MemoryService.cacheManager"/>
        </property>
        <property name="cacheName">
            <value>org.sakaiproject.dash.cache</value>
        </property>
        <property name="maxElementsInMemory" value="1000" />
        <property name="diskPersistent" value="false" />
        <property name="eternal" value="false" />
        <property name="timeToLive" value="3600" />
        <property name="timeToIdle" value="3600" />
    </bean>
    
	<bean id="org.sakaiproject.dash.listener.AssignmentNewEventProcessor" 
		class="org.sakaiproject.dash.listener.AssignmentNewEventProcessor" 
		init-method="init">
		<property name="dashboardLogic" ref="org.sakaiproject.dash.logic.DashboardLogic"></property>
    	<property name="sakaiProxy" ref="org.sakaiproject.dash.logic.SakaiProxy"></property>
    	<property name="entityBroker" ref="org.sakaiproject.entitybroker.EntityBroker"></property>
	</bean>
	
	<bean id="org.sakaiproject.dash.listener.AssignmentRemoveEventProcessor" 
		class="org.sakaiproject.dash.listener.AssignmentRemoveEventProcessor" 
		init-method="init">
		<property name="dashboardLogic" ref="org.sakaiproject.dash.logic.DashboardLogic"></property>
    	<property name="sakaiProxy" ref="org.sakaiproject.dash.logic.SakaiProxy"></property>
	</bean>
	
	<bean id="org.sakaiproject.dash.listener.ContentNewEventProcessor" 
		class="org.sakaiproject.dash.listener.ContentNewEventProcessor" 
		init-method="init">
		<property name="dashboardLogic" ref="org.sakaiproject.dash.logic.DashboardLogic"></property>
    	<property name="sakaiProxy" ref="org.sakaiproject.dash.logic.SakaiProxy"></property>
	</bean>
	
	<bean id="org.sakaiproject.dash.listener.ContentRemoveEventProcessor" 
		class="org.sakaiproject.dash.listener.ContentRemoveEventProcessor" 
		init-method="init">
		<property name="dashboardLogic" ref="org.sakaiproject.dash.logic.DashboardLogic"></property>
    	<property name="sakaiProxy" ref="org.sakaiproject.dash.logic.SakaiProxy"></property>
	</bean>
	
	<bean id="org.sakaiproject.dash.listener.AnnouncementNewEventProcessor" 
		class="org.sakaiproject.dash.listener.AnnouncementNewEventProcessor" 
		init-method="init">
		<property name="dashboardLogic" ref="org.sakaiproject.dash.logic.DashboardLogic"></property>
    	<property name="sakaiProxy" ref="org.sakaiproject.dash.logic.SakaiProxy"></property>
	</bean>
	
	<bean id="org.sakaiproject.dash.listener.AnnouncementRemoveAnyEventProcessor" 
		class="org.sakaiproject.dash.listener.AnnouncementRemoveAnyEventProcessor" 
		init-method="init">
		<property name="dashboardLogic" ref="org.sakaiproject.dash.logic.DashboardLogic"></property>
    	<property name="sakaiProxy" ref="org.sakaiproject.dash.logic.SakaiProxy"></property>
	</bean>
	
	<bean id="org.sakaiproject.dash.listener.AnnouncementRemoveOwnEventProcessor" 
		class="org.sakaiproject.dash.listener.AnnouncementRemoveOwnEventProcessor" 
		init-method="init">
		<property name="dashboardLogic" ref="org.sakaiproject.dash.logic.DashboardLogic"></property>
    	<property name="sakaiProxy" ref="org.sakaiproject.dash.logic.SakaiProxy"></property>
	</bean>

</beans>
